<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: layout | Han Ngo]]></title>
  <link href="http://tieubao.github.io/writing/blog/categories/layout/atom.xml" rel="self"/>
  <link href="http://tieubao.github.io/writing/"/>
  <updated>2020-06-02T02:12:00+07:00</updated>
  <id>http://tieubao.github.io/writing/</id>
  <author>
    <name><![CDATA[Han Ngo]]></name>
    <email><![CDATA[nntruonghan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Auto Layout in iOS]]></title>
    <link href="http://tieubao.github.io/writing/a/auto-layout-in-ios/"/>
    <updated>2015-01-05T01:07:49+07:00</updated>
    <id>http://tieubao.github.io/writing/a/auto-layout-in-ios</id>
    <content type="html"><![CDATA[<p>I spend a day to learn how to make auto layout in iOS. I begin with an article <a href="http://makeapppie.com/2014/07/26/the-swift-swift-tutorial-how-to-use-uiviews-with-auto-layout-programmatically/">How to use UIViews with auto layout programmatically</a>. It teaches me add views from the first then add size constraints and position contraints later. They are using <code>NSLayoutConstraint</code>.</p>

<p>After that, I find a thread at <a href="http://stackoverflow.com/questions/26180822/swift-adding-constraints-programmatically">StackOverflow</a>. They show off 3 ways to make Auto Layout programmatically</p>

<ul>
<li>Pure Classic style, which use NSLayoutConstraint with direct params</li>
<li>Pure Visual Format Language style, which use <code>NSLayoutConstraint.constraintsWithVisualFormat()</code> and Visually Format Languague. You can find more information about it at <a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/VisualFormatLanguage/VisualFormatLanguage.html#//apple_ref/doc/uid/TP40010853-CH3-SW1">Apple Library</a></li>
<li>Mixed style (Classic + Visual Format Language)</li>
</ul>


<p><img src="/images/blog/2015-01-05-career365-ios-splash.png"></p>

<p>I also try to apply to Career 365 splashscreen but It doesn&rsquo;t seem to be working. Struggling about an hour, finally I decide to find some more help from community and I find out <a href="https://github.com/robb/Cartography">Cartography</a>. It&rsquo;s such a good library which has about 1k5 stars from Github Users. Their syntax are good too. I think I should give it a try tmr.</p>

<p>```
layout(view1, view2) { view1, view2 in</p>

<pre><code>view1.width   == (view1.superview!.width - 50) * 0.5
view2.width   == view1.width - 50
view1.height  == 40
view2.height  == view1.height
view1.centerX == view1.superview!.centerX
view2.centerX == view1.centerX

view1.top &gt;= view1.superview!.top + 20
view2.top == view1.bottom + 20
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
