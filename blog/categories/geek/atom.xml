<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: geek | Han Ngo]]></title>
  <link href="http://tieubao.github.io/notes/blog/categories/geek/atom.xml" rel="self"/>
  <link href="http://tieubao.github.io/notes/"/>
  <updated>2020-06-02T01:54:41+07:00</updated>
  <id>http://tieubao.github.io/notes/</id>
  <author>
    <name><![CDATA[Han Ngo]]></name>
    <email><![CDATA[nntruonghan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Geeky solutions: 1.1 Easy Keypad]]></title>
    <link href="http://tieubao.github.io/notes/a/geekyvn-solutions-1-dot-1-easy-keypad/"/>
    <updated>2014-12-15T21:34:44+07:00</updated>
    <id>http://tieubao.github.io/notes/a/geekyvn-solutions-1-dot-1-easy-keypad</id>
    <content type="html"><![CDATA[<h2>Problem Set 2: THE ROOM 1.1: Easy keypad</h2>

<p>OK. After registration, you will get into room 1.1 with the picture from Saw movie and it make me feel something creepy.</p>

<p><img src="/images/blog/2014-12-15-ps2-room-1-1.png"></p>

<p>You are in the room. There&rsquo;s the door, with the keypad. You need guess the passcode to get out.</p>

<p><img src="/images/blog/2014-12-15-ps2-room-1-1-keypad.jpg"></p>

<p>```
The standard keypad layout is as followed:
1 2 3
4 5 6
7 8 9
* 0 #</p>

<p>Input:</p>

<ul>
<li>First line: length of the passcode</li>
<li>Next 4 lines: standard keypad layout with values of max the button is used in the passcode. For example: 0 means the button is never used, 1 means it&rsquo;s used at most 1 time, 2 means it&rsquo;s used at most 2 times in the passcode.</li>
</ul>


<p>Output:
&ndash; All the result combinations, sorted by ascending. Each combination on a line.</p>

<p>Sample input:
3
0 0 0
1 0 0
0 2 0
0 1 0</p>

<p>Sample output:
0 4 8
0 8 4
0 8 8
4 0 8
4 8 0
4 8 8
8 0 4
8 0 8
8 4 0
8 4 8
8 8 0
8 8 4
```</p>

<p>Press <code>help</code> and you will get more commands.</p>

<p><code>
Available commands:
ls, cat, cd     You know what these are.
submit          Upload solution for current puzzle. Supported languages: Ruby 1.9.2, PHP, C, C++, Perl, Python
submit test     Upload simple file to read input and write the same output.
All are standard input and output
Check notifications.txt for result. It may take a while due to long queue.
</code></p>

<p>Back to the problem, they want you to write a program that receive input from keyboard. Map the input array to the keypad value then list out all the sub-arrays that has the same length as the passcode. You need to write it in their supported languages and submit the solution via command <code>submit</code>.</p>

<p>Honestly, I&rsquo;m too lazy to those kind of problems :smile:. Let&rsquo;s find the solution somewhere else. StackOverflow is a good option. (Learn from other is good too).</p>

<ul>
<li><a href="http://stackoverflow.com/questions/127704/algorithm-to-return-all-combinations-of-k-elements-from-n">Algorithm to return all combinations of k elements from n</a></li>
<li><a href="http://stackoverflow.com/questions/1952153/what-is-the-best-way-to-find-all-combinations-of-items-in-an-array">What is the best way to find all combinations of items in an array?</a></li>
<li><a href="http://stackoverflow.com/questions/13765699/how-can-i-obtain-all-the-possible-combination-of-a-subset">How can I obtain all the possible combination of a subset?</a></li>
</ul>


<p>All materials is here. Let&rsquo;s cook them.</p>

<p><strong>Step 1: Write python script that receive input from keyboard.</strong>
<code>
N
0 0 0
1 0 0
0 2 0
0 1 0
</code></p>

<p><strong>Step 2: Convert input to an array</strong></p>

<p><code>
Value: 0 0 0 1 0 0 0 2 0 0 1  0
Index: 0 1 2 3 4 5 6 7 8 9 10 11
</code></p>

<p><code>
Array with meaningful elements:
4 8 8 0
</code></p>

<p><strong>Step 3: Apply algorithm to list all sub-array with given length <code>N</code></strong></p>

<p>You can use the solution from the internet or write by yourself. Python offers a great <a href="https://docs.python.org/2/library/itertools.html"><code>itertools</code></a> lib to handle that kind of stuff.</p>

<p>``` python</p>

<p>result = list(itertools.permutations(a, length))
result = sorted(set(result))</p>

<p>```</p>

<p>I think my own solution works well but it does not pass the test. Maybe I should quit.</p>

<p>``` python
import itertools</p>

<p>input_arr = list()
length = int(raw_input())</p>

<h1>Input</h1>

<p>for i in xrange(0, 4):</p>

<pre><code>s = raw_input()
s = s.split()
for item in s:
    input_arr.append(int(item))
</code></pre>

<h1>Mapping input to real values</h1>

<p>a = list()
for i in xrange(len(input_arr)):</p>

<pre><code>if (input_arr[i] != 0):
    for j in xrange(input_arr[i]):
        if i &lt;= 8:
            a.append(i + 1)
        else:
            a.append(0)
</code></pre>

<h1>Generate</h1>

<p>result = list(itertools.permutations(a, length))
result = sorted(set(result))</p>

<h1>Print out the result</h1>

<p>for item in result:</p>

<pre><code>val = ""
for i in (xrange(0, length)):
    if i &lt; length - 1:
        val = val + str(item[i]) + " "
    else:
        val = val + str(item[i])

print val
</code></pre>

<p>```</p>

<p>Sample:</p>

<p><code>
4
1 0 0
0 1 0
2 0 0
0 1 0
0 1 5 7
0 1 7 5
0 1 7 7
0 5 1 7
0 5 7 1
0 5 7 7
0 7 1 5
0 7 1 7
0 7 5 1
0 7 5 7
0 7 7 1
0 7 7 5
1 0 5 7
1 0 7 5
1 0 7 7
1 5 0 7
1 5 7 0
1 5 7 7
1 7 0 5
1 7 0 7
1 7 5 0
1 7 5 7
1 7 7 0
1 7 7 5
5 0 1 7
5 0 7 1
5 0 7 7
5 1 0 7
5 1 7 0
5 1 7 7
5 7 0 1
5 7 0 7
5 7 1 0
5 7 1 7
5 7 7 0
5 7 7 1
7 0 1 5
7 0 1 7
7 0 5 1
7 0 5 7
7 0 7 1
7 0 7 5
7 1 0 5
7 1 0 7
7 1 5 0
7 1 5 7
7 1 7 0
7 1 7 5
7 5 0 1
7 5 0 7
7 5 1 0
7 5 1 7
7 5 7 0
7 5 7 1
7 7 0 1
7 7 0 5
7 7 1 0
7 7 1 5
7 7 5 0
7 7 5 1
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geeky solutions: Registration]]></title>
    <link href="http://tieubao.github.io/notes/a/geeky-dot-vn-solutions/"/>
    <updated>2014-12-15T16:06:48+07:00</updated>
    <id>http://tieubao.github.io/notes/a/geeky-dot-vn-solutions</id>
    <content type="html"><![CDATA[<p><img src="/images/blog/2014-12-15-geeky.png"></p>

<p>Homepage: <a href="http://www.geeky.vn/">http://www.geeky.vn/</a> <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>Read more about Geeky on <a href="https://www.techinasia.com/geeky-puzzles-filter-recruit-smart-engineers-vietnam/">TechInAsia</a>.</p>

<p>Nowadays, many startups use geeky.vn as a standard to recruit new members. You have to be a geek with a capability to think out of the box, some knowledge on computer and linux to start the game.</p>

<p><img src="/images/blog/2014-12-15-welcome.png"></p>

<h2>Problem Set 1: Register</h2>

<p><img src="/images/blog/2014-12-15-ps1-register.png"></p>

<p>Step 1: Calculate <code>{ [ (prls6 base 36 - prime base 36) &lt;&lt; 7 ] - 1 }</code> to base 10</p>

<p><code>
{ [ (prls6 base 36 - prime base 36) &lt;&lt; 7 ] - 1 }
= (43278342 - 43274246 &lt;&lt; 7) - 1
= (2^12 &lt;&lt; 7) - 1 [^2]
= 2^19- 1
= 524288 - 1 = 524287
</code></p>

<p>Step 2:</p>

<p>Easiest way: Google to get first <code>524287</code> digits after decimal of Pi. Copy them to some text editor and pick for 524287 digits.</p>

<p>Hard way: Write a script to get those digits.</p>

<p>Step 3: Write a script to hash the result with MD5. There are a lot of digits from step 2 and you cannot use online tool. They want to make sure that you know at least one programming language or you have a special way to find a result.</p>

<p><code>
MD5: 2663512a5e7b6d3ae8ca521bfXXXXXXX
</code></p>

<p>A big congratulation if you can get there.</p>

<p><img src="/images/blog/2014-12-15-ps1-congrats.png"></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Founder of Geeky.vn is <a href="https://www.linkedin.com/in/tuananh">Mr. Nguyen Tuan Anh</a>. He is one of the previous that I admire.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
